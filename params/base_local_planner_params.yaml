# TrajectoryPlannerROS:
DWAPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 3.0
  acc_lim_y: 0
  acc_lim_th: 3.1
  acc_lim_trans: 3.0

  max_vel_trans: 1.5
  min_vel_trans: 0

  max_vel_x: 1.0
  min_vel_x: -1.0

  max_vel_y: 0
  min_vel_y: 0

  max_vel_theta : 1.5
  min_vel_theta : 0.1

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 1.0
  latch_xy_goal_tolerance: true

  # Forward Simulation Parameters
  sim_time: 4.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 5
  vth_samples: 25
  controller_frequency: 10.0

  # Trajectory scoring parameters
  path_distance_bias: 0.5
  goal_distance_bias: 0.8
  occdist_scale: 0.03
  twirling_scale: 0.0
  forward_point_distance: 0.6
  stop_time_buffer: 0.2
  scaling_speed: 0.25 
  max_scaling_factor: 0.2 
  publish_cost_grid_pc: false

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.0
  oscillation_rest_angle: 0.0

  # Global Plan Parameters
  prune_plan: true

  # Etc.
  use_dwa: true
  restore_defaults: false

  # meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  # occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  # pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  # gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  # heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  # heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  # heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  # dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  # simple_attractor: false
  # publish_cost_grid_pc: true

  # #Oscillation Prevention Parameters
  # oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  # escape_reset_dist: 0.1
  # escape_reset_theta: 0.1
